_id: spc_8c81d314479b4a84a656862a7d13e338
type: ApiSpec
parentId: wrk_7c4f0bd567674fd185fcdd1afb72ff58
modified: 1630279952143
created: 1630247769739
fileName: Ignite - FinApi
contents: |-
  openapi: 3.0.0
  servers:
    - description: SwaggerHub API Auto Mocking
      url: https://virtserver.swaggerhub.com/Raicamposs/ignite-fin-api/1.0.0
  info:
    description: Ignite - Trilha Node.js -> Primeiro projeto com Node.js
    version: "1.0.0"
    title: FinAPI
    contact:
      email: raianejanu@hotmail.com
      name: Raiane Campos
      url: https://www.linkedin.com/in/raiane-campos-6a225b80/
    license:
      name: Apache 2.0
      url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  tags:
    - name: account
      description: Everything about accounts
    - name: operations
      description: All operations os an account  
  paths:
    /account:
      post:
        tags:
          - account
        summary: Adds a account item
        operationId: addAccount
        description: Adds an item to the system
        responses:
          '201':
            description: Account created
          '400':
            description: Costumer already exists
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error' 
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountForm'
          description: Account item to add
      put:
        tags:
          - account
        summary: Modify a account item
        operationId: updateAccount
        description: modify account data
        parameters:
          - in: header
            name: cpf
            schema:
              type: string
              example: 92749651689
            required: true 
        responses:
          '201':
            description: Modified account
          '400':
            $ref: '#/components/responses/CostumerNotFound'
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                properties:
                  name:
                    type: string
                    example: Isabela Moraes
          description: Data to be modified 
      get:
        tags:
          - account    
        summary: Fetch account data
        operationId: getAccount
        description: Fetch customer account data
        parameters:
          - in: header
            name: cpf
            schema:
              type: string
              example: 92749651689
            required: true 
        responses:
          '200':
            description: Modified account
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Account'
          '400':
            $ref: '#/components/responses/CostumerNotFound' 
    /statement:
      get:
        tags:
          - operations  
        summary: Search statement
        operationId: searchStatement
        description: Search for the customer's bank statement
        parameters:
          - in: header
            name: cpf
            schema:
              type: string
              example: 92749651689
            required: true
          - in: query
            name: date
            schema:
              type: string
              format: date
              example: 2021-08-29
            required: false  
        responses:
          '200':
            description: Extract found
            content:
              application/json:
                 schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Statement'
          '400':
            $ref: '#/components/responses/CostumerNotFound' 
    /balance:
      get:
        tags:
          - operations      
        summary: Search balance
        operationId: searchBalance
        description: Search for the balance of customer's bank statement
        parameters:
          - in: header
            name: cpf
            schema:
              type: string
              example: 92749651689
            required: true
        responses:
          '200':
            description: Extract found
            content:
              text/plain:
                schema:
                  type: number
                  example: 1000
          '400':
            $ref: '#/components/responses/CostumerNotFound'  
    /deposit:
      post:
        tags:
          - operations   
        summary: Deposit into an account
        operationId: depositAccount
        description: Make a deposit to a customer's account
        parameters:
          - in: header
            name: cpf
            schema:
              type: string
              example: 92749651689
            required: true
        responses:
          '201':
            description: Deposit created
          '400':
            $ref: '#/components/responses/CostumerNotFound'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositOperation'   
    /withdraw:
      post:
        tags:
          - operations      
        summary: Withdrawal on an account
        operationId: withdrawalAccount
        description: Make a withdrawal from a customer's account
        parameters:
          - in: header
            name: cpf
            schema:
              type: string
              example: 92749651689
            required: true
        responses:
          '201':
            description: Withdrawal concluid
          '400':
            $ref: '#/components/responses/CostumerNotFound'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawalOperation'         
  components:
    responses:
       CostumerNotFound:
        description: Costumer not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
    schemas:
      Error:
        type: object
        required:
          - error
        properties:
          error:
            type: string
            example: Costumer not found
      Statement:
        required:
          - type
          - amount
        properties:
          description:
            type: string
            example: salary
          type:
            type: string
            enum: [credit, debit]
          amount:
            type: number
            example: 1000
          created_at:
            type: string
            format: date-time
            example: 2017-07-21T17:32:28Z
        type: object
      Account:
        type: object
        required:
          - name
          - cpf
        properties:
          id:
            type: string
            format: uuid
          name:
            type: string
            example: Allana Adriana Isabela Moraes
          cpf:
            type: string
            example: 927.496.516-89 
          balance:
            type: number
            example: 1000 
          statement:
            type: array
            items:
              $ref: '#/components/schemas/Statement'
      AccountForm:
        required:
          - name
          - cpf
        properties:
          name:
            type: string
            example: Allana Adriana Isabela Moraes
          cpf:
            type: string
            example: 927.496.516-89
        type: object
      DepositOperation:
        required:
          - amount
          - description
        properties:
          amount:
            type: number
            example: 2000
          description:
            type: string
            example: salary
        type: object  
      WithdrawalOperation:
        required:
          - amount
        properties:
          amount:
            type: number
            example: 2000
        type: object
contentType: yaml
